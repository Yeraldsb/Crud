{"version":3,"sources":["servicios/api.jsx","components/List.jsx","components/Create.jsx","components/Edit.jsx","App.js","reportWebVitals.js","index.js"],"names":["api","List","props","borrarRegistros","id","fetch","Api","then","r","json","datosRespuesta","console","log","cargarDatos","catch","state","datosCargados","empleados","setState","this","className","to","Table","striped","bordered","hover","map","empleado","nombre","correo","type","onClick","React","Component","Create","cambioValor","e","target","name","value","errores","enviarDatos","preventDefault","push","length","datosEnviar","method","body","JSON","stringify","history","elemento","indexOf","Form","onSubmit","Group","htmlFor","onChange","verificarError","placeholder","role","withRouter","Edit","match","params","readOnly","required","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c38acf3.chunk.js","sourcesContent":["const api=\"http://localhost/empleados/empleados/\";\r\nexport default api;","import React from \"react\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Api from '../servicios/api'\r\n\r\n\r\nclass List extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            datosCargados: false,\r\n            empleados: []\r\n        }\r\n    }\r\n\r\n    borrarRegistros = (id) => {\r\n\r\n        fetch(Api+\"?borrar=\"+id)\r\n            .then(r => r.json())\r\n            .then((datosRespuesta) => {\r\n\r\n                console.log(datosRespuesta);\r\n                this.cargarDatos();\r\n            })\r\n\r\n            .catch(console.log)\r\n    }\r\n\r\n\r\n    cargarDatos() {\r\n        fetch(Api)\r\n            .then(r => r.json())\r\n            .then((datosRespuesta) => {\r\n                console.log(datosRespuesta);\r\n                this.setState({datosCargados: true, empleados: datosRespuesta})\r\n            })\r\n\r\n            .catch(console.log)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.cargarDatos();\r\n    }\r\n\r\n    render() {\r\n        const {datosCargados, empleados} = this.state\r\n\r\n        if (!datosCargados) {\r\n            return (<div>Cargando...</div>);\r\n        } else {\r\n            return (\r\n\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <Link className=\"btn btn-success\" to={\"/create\"}>Agregar nuevo empleado</Link>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h4> Lista de empleados </h4>\r\n                        <Table striped bordered hover>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Acciones</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {\r\n                                empleados.map(empleado => (\r\n                                        <tr key={empleado.id}>\r\n                                            <td>{empleado.id}</td>\r\n                                            <td>{empleado.nombre}</td>\r\n                                            <td>{empleado.correo}</td>\r\n                                            <div>\r\n                                                <Link className=\"btn btn-warning\"\r\n                                                      to={\"/edit/\"+empleado.id}\r\n\r\n                                                >Edit</Link>\r\n                                                <button type=\"button\" className=\"btn btn-danger\"\r\n                                                        onClick={() => this.borrarRegistros(empleado.id)}>\r\n                                                    Delete\r\n                                                </button>\r\n                                            </div>\r\n\r\n                                        </tr>\r\n\r\n                                    )\r\n                                )\r\n                            }\r\n                            </tbody>\r\n                        </Table>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"card-footer text-muted\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default List;","import * as React from \"react\";\r\nimport {Form} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport Api from '../servicios/api'\r\n\r\nclass Create extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nombre: \"\",\r\n            correo: \"\",\r\n            errores: []\r\n        }\r\n    }\r\n\r\n    cambioValor = (e) => {\r\n        const state = this.state;\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({state, errores: []});\r\n    }\r\n\r\n    verificarError(elemento) {\r\n        return this.state.errores.indexOf(elemento) !== -1;\r\n    }\r\n\r\n    enviarDatos = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Formulario enviado...\")\r\n        const {nombre, correo} = this.state;\r\n\r\n        let errores = [];\r\n        if (!nombre) errores.push(\"error_nombre\");\r\n        if (!nombre) errores.push(\"error_correo\");\r\n\r\n        this.setState({errores: errores});\r\n        if (errores.length > 0) return false;\r\n\r\n        let datosEnviar = {nombre: nombre, correo: correo};\r\n\r\n        fetch(Api + \"?insertar=1\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(datosEnviar)\r\n        })\r\n            .then(r => r.json())\r\n            .then((datosRespuesta) => {\r\n\r\n                console.log(datosRespuesta);\r\n                this.props.history.push(\"/list\");\r\n\r\n            })\r\n\r\n            .catch(console.log)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const {nombre, correo} = this.state;\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    Empleados\r\n                </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <Form onSubmit={this.enviarDatos}>\r\n                        <Form.Group>\r\n                            <label htmlFor=\"\">Nombre:</label>\r\n                            <input type=\"text\" onChange={this.cambioValor} value={nombre} name=\"nombre\" id=\"nombre\"\r\n                                   className={((this.verificarError(\"error_nombre\")) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                   placeholder=\"\" aria-describedby=\"helpId\"/>\r\n                            <small id=\"helpId\" className=\"invalid-feedback\">Escribe el nombre del empleado </small>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <label htmlFor=\"\">Correo:</label>\r\n                            <input type=\"text\" onChange={this.cambioValor} value={correo} name=\"correo\" id=\"correo\"\r\n                                   className={((this.verificarError(\"error_correo\")) ? \"is-invalid\" : \"\") + \" form-control\"}\r\n                                   placeholder=\"\" aria-describedby=\"helpId\"/>\r\n                            <small id=\"helpId\" className=\"invalid-feedback\">Escribe el correo del empelado </small>\r\n\r\n                        </Form.Group>\r\n                        <div className=\"btn-group\" role=\"group\">\r\n\r\n                            <button type=\"submit\" className=\"btn btn-success\"> Agregar nuevo empleado</button>\r\n                            <Link to={\"/list\"} className=\"btn btn-primary\"> Cancelar </Link>\r\n\r\n                        </div>\r\n\r\n                    </Form>\r\n\r\n\r\n                </div>\r\n                <div className=\"card-footer text-muted\">\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Create);","import * as React from \"react\";\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Form} from \"react-bootstrap\";\r\nimport Api from '../servicios/api'\r\n\r\nclass Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            datosCargados: false,\r\n            empleado: []\r\n        }\r\n    }\r\n\r\n    cambioValor = (e) => {\r\n        const state = this.state.empleado;\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({empleado: state});\r\n    }\r\n\r\n    enviarDatos = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Formulario enviado...\");\r\n        const {id,nombre,correo}= this.state.empleado;\r\n\r\n        let datosEnviar = {id:id, nombre: nombre, correo: correo};\r\n\r\n        fetch(Api + \"?actualizar=1\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(datosEnviar)\r\n        })\r\n            .then(r => r.json())\r\n            .then((datosRespuesta) => {\r\n\r\n                this.props.history.push(\"/list\");\r\n\r\n            })\r\n\r\n            .catch(console.log)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n\r\n        fetch(Api + \"?consultar=\" + this.props.match.params.id)\r\n            .then(r => r.json())\r\n            .then((datosRespuesta) => {\r\n                this.setState({\r\n                    datosCargados: true,\r\n                    empleado: datosRespuesta[0]\r\n                })\r\n            })\r\n\r\n            .catch(console.log)\r\n\r\n    }\r\n\r\n    render() {\r\n        const {datosCargados, empleado} = this.state\r\n\r\n        if (!datosCargados) {\r\n            return (<div>Cargando...</div>);\r\n        } else {\r\n            return (\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        Editar empleados\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n\r\n                        <Form onSubmit={this.enviarDatos}>\r\n                            <Form.Group>\r\n                                <label htmlFor=\"\" > Clave: </label>\r\n                                <input  type=\"text\" readOnly className=\"form-control\" value={empleado.id} onChange={this.cambioValor} name=\"id\" id=\"id\" aria-describedby=\"helpId\" placeholder=\"\"/>\r\n                                <small id=\"helpId\" className=\"form-text text-muted\"> Clave</small>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <label htmlFor=\"\">Nombre:</label>\r\n                                <input required type=\"text\" onChange={this.cambioValor} value={empleado.nombre} name=\"nombre\"\r\n                                       id=\"nombre\"\r\n                                       className=\"form-control\" placeholder=\"\" aria-describedby=\"helpId\"/>\r\n                                <small id=\"helpId\" className=\"text-muted\">Escribe el nombre del empelado </small>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <label htmlFor=\"\">Correo:</label>\r\n                                <input required type=\"text\" onChange={this.cambioValor} value={empleado.correo} name=\"correo\"\r\n                                       id=\"correo\"\r\n                                       className=\"form-control\" placeholder=\"\" aria-describedby=\"helpId\"/>\r\n                                <small id=\"helpId\" className=\"text-muted\">Escribe el correo del empelado </small>\r\n                            </Form.Group>\r\n                            <div className=\"btn-group\" role=\"group\">\r\n                                <button type=\"submit\" className=\"btn btn-success\"> Guardar nuevos cambios</button>\r\n                                <Link to={\"/list\"} className=\"btn btn-primary\"> Cancelar </Link>\r\n\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"card-footer text-muted\">\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Edit);","import './App.css';\nimport List from \"./components/List\"\nimport {Route, Link, BrowserRouter as Router} from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Create from \"./components/Create\";\nimport Edit from \"./components/Edit\";\n\n\nfunction App() {\n    return (\n\n        <Router>\n            <nav className=\"navbar navbar-expand navbar-light bg-light\">\n                <div className=\"nav navbar-nav\">\n                    <Link className=\"nav-item nav-link active\" to={\"/list\"}>Sistema <span className=\"sr-only\">(current) </span> </Link>\n                    <Link className=\"nav-item nav-link\" to={\"/create\"}> Crear empleado  </Link>\n\n                </div>\n            </nav>\n\n            <div className=\"container\">\n                <br/>\n\n                <Route path=\"/list\" > <List /> </Route>\n                <Route path=\"/create\" > <Create /> </Route>\n                <Route path=\"/edit/:id\" > <Edit /> </Route>\n\n\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}